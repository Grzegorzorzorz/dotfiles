(defwidget temperature []
 (box
  :halign "end"
  :space-evenly false
  :orientation "h"
  :spacing 8
  (box
   :orientation "v"
   :width 48
   :valign "center"
   :halign "end"
   (label :text "TMP" :class "sys-label")
   (box
   :space-evenly false
   :halign "center"
   (label :text "${EWW_TEMPS["CORETEMP_PACKAGE_ID_0"]}°C" :class "sys-value")
   )
  )
  (box
   :width 40
   (circular-progress
    :class "temperature-progress"
    :start-at 75
    :clockwise false
    :value "${EWW_TEMPS["CORETEMP_PACKAGE_ID_0"]}"
    :thickness 4
	(label
	 :text ""
	 :class "sys-icon"
	)
   )
  )
 )
)

(defwidget battery []
 (box
  :halign "end"
  :space-evenly false
  :orientation "h"
  :spacing 8
  (box
   :orientation "v"
   :width 48
   :valign "center"
   :halign "end"
   (label :text "PWR" :class "sys-label")
   (box
   :space-evenly false
   :halign "center"
   (label :text "${round(EWW_BATTERY["BAT0"].capacity, 1)}%" :class "sys-value")
   )
  )
  (box
   :width 40
   (circular-progress
    :class {EWW_BATTERY["BAT0"].capacity > 15 || EWW_BATTERY["BAT0"].status == "Charging" ? "battery-progress" : "battery-progress-critical"}
    :start-at 75
    :clockwise false
    :value "${EWW_BATTERY["BAT0"].capacity}"
    :thickness 4
	(label
	 :text ""
	 :class "battery-icon"
	 :style {EWW_BATTERY["BAT0"].status != "Discharging" ? "color: #EBCB8B" : "color: #2E3440"}
	)
   )
  )
 )
)

(defwidget cpu []
 (box
  :halign "end"
  :space-evenly false
  :orientation "h"
  :spacing 8
  (box
   :orientation "v"
   :width 48
   :valign "center"
   :halign "end"
   (label :text "CPU" :class "sys-label")
   (label :text "${round(EWW_CPU.avg, 1)}%" :class "sys-value")
  )
  (box
   :width 40
   (circular-progress
    :class "cpu-progress"
    :start-at 75
    :clockwise false
    :value "${EWW_CPU.avg}"
    :thickness 4
	(label :text "" :class "sys-icon")
   )
  )
 )
)

(defwidget memory []
 (box
  :halign "end"
  :space-evenly false
  :orientation "h"
  :spacing 8
  (box
   :orientation "v"
   :width 48
   :valign "center"
   :halign "end"
   (label :text "MEM" :class "sys-label")
   (label :text "${round(EWW_RAM.used_mem_perc, 1)}%" :class "sys-value")
  )
  (box
   :width 40
   (circular-progress
    :class "memory-progress"
    :start-at 75
    :clockwise false
    :value "${EWW_RAM.used_mem_perc}"
    :thickness 4
	(label :text "" :class "sys-icon")
   )
  )
 )
)

(defwidget sys []
 (box
  :space-evenly false
  :spacing 24
  (battery)
  (cpu)
  (memory)
  (temperature)
 )
)
